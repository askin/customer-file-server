{
  "swagger": "2.0",
  "info": {
    "description": "This is a demo Rest API Documentation for Customer Documents",
    "version": "1.0.0",
    "title": "Customer Documents",
    "contact": {
      "name": "Aşkın Özgür",
      "url": "https://askin.ws",
      "email": "askin@askin.ws"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "Customer Controller",
      "description": "Customer Controller"
    },
    {
      "name": "File Controller",
      "description": "File Controller"
    },
    {
      "name": "User Controller",
      "description": "User Controller"
    }
  ],
  "paths": {
    "/customers": {
      "get": {
        "tags": [
          "Customer Controller"
        ],
        "summary": "Get all customers",
        "operationId": "getAllCustomersUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "header",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Customer Controller"
        ],
        "summary": "Create a customer",
        "operationId": "createCustomerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerRequest",
            "description": "customerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerRequest"
            }
          },
          {
            "name": "userId",
            "in": "header",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/customers/{customerId}": {
      "get": {
        "tags": [
          "Customer Controller"
        ],
        "summary": "Get a customer with Id",
        "operationId": "getCustomerUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "header",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer Controller"
        ],
        "summary": "Update a customer",
        "operationId": "updateCustomerUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "customerUpdateRequest",
            "description": "customerUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerUpdateRequest"
            }
          },
          {
            "name": "userId",
            "in": "header",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Controller"
        ],
        "summary": "Delete a customer with Id",
        "operationId": "deleteCustomerUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "header",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/files": {
      "get": {
        "tags": [
          "File Controller"
        ],
        "summary": "Get all files",
        "operationId": "getAllFilesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "header",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FileResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "File Controller"
        ],
        "summary": "Create a file",
        "operationId": "createFileUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileRequest",
            "description": "fileRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileRequest"
            }
          },
          {
            "name": "userId",
            "in": "header",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/files/fileId": {
      "get": {
        "tags": [
          "File Controller"
        ],
        "summary": "Get a file with Id",
        "operationId": "getFileUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "fileId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "header",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/files/{fileId}": {
      "put": {
        "tags": [
          "File Controller"
        ],
        "summary": "Update a file",
        "operationId": "updateFileUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "fileId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "fileUpdateRequest",
            "description": "fileUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileUpdateRequest"
            }
          },
          {
            "name": "userId",
            "in": "header",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "File Controller"
        ],
        "summary": "Delete a file with id",
        "operationId": "deleteFileUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "fileId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "header",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User Controller"
        ],
        "summary": "Get all users",
        "operationId": "getUsersUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "header",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "User Controller"
        ],
        "summary": "Create new user",
        "operationId": "createUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userRequest",
            "description": "userRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{targetUserId}": {
      "put": {
        "tags": [
          "User Controller"
        ],
        "summary": "Update a user",
        "operationId": "updateUserUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "targetUserId",
            "in": "path",
            "description": "targetUserId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "header",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "userUpdateRequest",
            "description": "userUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "User Controller"
        ],
        "summary": "Delete a user",
        "operationId": "deleteUserUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "targetUserId",
            "in": "path",
            "description": "targetUserId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "header",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "CustomerRequest": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string"
        }
      },
      "title": "CustomerRequest"
    },
    "CustomerResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        },
        "fullName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "CustomerResponse"
    },
    "CustomerUpdateRequest": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        },
        "fullName": {
          "type": "string"
        }
      },
      "title": "CustomerUpdateRequest"
    },
    "FileRequest": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "title": "FileRequest"
    },
    "FileResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/CustomerResponse"
        },
        "deleted": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/UserResponse"
        }
      },
      "title": "FileResponse"
    },
    "FileUpdateRequest": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "deleted": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "FileUpdateRequest"
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        },
        "statusCode": {
          "type": "string",
          "enum": [
            "ACCEPTED",
            "ALREADY_REPORTED",
            "BAD_GATEWAY",
            "BAD_REQUEST",
            "BANDWIDTH_LIMIT_EXCEEDED",
            "CHECKPOINT",
            "CONFLICT",
            "CONTINUE",
            "CREATED",
            "DESTINATION_LOCKED",
            "EXPECTATION_FAILED",
            "FAILED_DEPENDENCY",
            "FORBIDDEN",
            "FOUND",
            "GATEWAY_TIMEOUT",
            "GONE",
            "HTTP_VERSION_NOT_SUPPORTED",
            "IM_USED",
            "INSUFFICIENT_SPACE_ON_RESOURCE",
            "INSUFFICIENT_STORAGE",
            "INTERNAL_SERVER_ERROR",
            "I_AM_A_TEAPOT",
            "LENGTH_REQUIRED",
            "LOCKED",
            "LOOP_DETECTED",
            "METHOD_FAILURE",
            "METHOD_NOT_ALLOWED",
            "MOVED_PERMANENTLY",
            "MOVED_TEMPORARILY",
            "MULTIPLE_CHOICES",
            "MULTI_STATUS",
            "NETWORK_AUTHENTICATION_REQUIRED",
            "NON_AUTHORITATIVE_INFORMATION",
            "NOT_ACCEPTABLE",
            "NOT_EXTENDED",
            "NOT_FOUND",
            "NOT_IMPLEMENTED",
            "NOT_MODIFIED",
            "NO_CONTENT",
            "OK",
            "PARTIAL_CONTENT",
            "PAYLOAD_TOO_LARGE",
            "PAYMENT_REQUIRED",
            "PERMANENT_REDIRECT",
            "PRECONDITION_FAILED",
            "PRECONDITION_REQUIRED",
            "PROCESSING",
            "PROXY_AUTHENTICATION_REQUIRED",
            "REQUESTED_RANGE_NOT_SATISFIABLE",
            "REQUEST_ENTITY_TOO_LARGE",
            "REQUEST_HEADER_FIELDS_TOO_LARGE",
            "REQUEST_TIMEOUT",
            "REQUEST_URI_TOO_LONG",
            "RESET_CONTENT",
            "SEE_OTHER",
            "SERVICE_UNAVAILABLE",
            "SWITCHING_PROTOCOLS",
            "TEMPORARY_REDIRECT",
            "TOO_EARLY",
            "TOO_MANY_REQUESTS",
            "UNAUTHORIZED",
            "UNAVAILABLE_FOR_LEGAL_REASONS",
            "UNPROCESSABLE_ENTITY",
            "UNSUPPORTED_MEDIA_TYPE",
            "UPGRADE_REQUIRED",
            "URI_TOO_LONG",
            "USE_PROXY",
            "VARIANT_ALSO_NEGOTIATES"
          ]
        },
        "statusCodeValue": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ResponseEntity"
    },
    "UserRequest": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      },
      "title": "UserRequest"
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "role": {
          "type": "string",
          "enum": [
            "ADMIN",
            "USER"
          ]
        },
        "userName": {
          "type": "string"
        }
      },
      "title": "UserResponse"
    },
    "UserUpdateRequest": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "ADMIN",
            "USER"
          ]
        },
        "userName": {
          "type": "string"
        }
      },
      "title": "UserUpdateRequest"
    }
  }
}